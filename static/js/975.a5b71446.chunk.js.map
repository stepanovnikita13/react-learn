{"version":3,"file":"static/js/975.a5b71446.chunk.js","mappings":"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","sources":["components/Dialogs/DialogItem/DialogItem.styled.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.styled.ts","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Chat/Message/Message.styled.js","components/Dialogs/Chat/Message/Message.jsx","components/Dialogs/Chat/Chat.styled.ts","components/Dialogs/Chat/Chat.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-selectors.ts","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["import { createUseStyles } from 'react-jss'\r\n\r\nconst useStyles = createUseStyles({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t\tcolumnGap: 10,\r\n\t\t'& img': {\r\n\t\t\twidth: 50,\r\n\t\t\theight: 50,\r\n\t\t\tobjectFit: 'cover',\r\n\t\t\tborderRadius: '50%'\r\n\t\t}\r\n\t}\r\n})\r\n\r\nexport default useStyles","import { NavLink } from 'react-router-dom'\r\nimport useStyles from './DialogItem.styled'\r\n\r\ntype Props = {\r\n\tid: number\r\n\tavatar: string\r\n\tname: string\r\n\tonClick: () => void\r\n}\r\nconst DialogItem: React.FC<Props> = (props) => {\r\n\tconst { id, avatar, name, onClick } = props\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<div className={classes.container} onClick={onClick} >\r\n\t\t\t<img src={avatar} alt=\"\" />\r\n\t\t\t<NavLink to={'/dialogs/' + id} >{name}</NavLink>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default DialogItem;","import { createUseStyles } from 'react-jss'\r\nimport { device } from '../../styles/device'\r\nimport { CustomTheme } from '../../styles/themes'\r\nimport { StyleProps } from './Dialogs'\r\n\r\ntype RuleNames = 'container' | 'dialogs' | 'button'\r\nconst useStyles = createUseStyles<RuleNames, StyleProps, CustomTheme>(theme => ({\r\n\tcontainer: {\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'relative',\r\n\t\theight: `calc(100vh - ${theme.sizes.headerHeight}px)`,\r\n\t\tpadding: [20, 0],\r\n\t},\r\n\tdialogs: {\r\n\t\tposition: 'absolute',\r\n\t\tinset: '20px 0px',\r\n\t\tbackgroundColor: theme.colors.background,\r\n\t\tzIndex: theme.zIndex.dialogs,\r\n\t\ttransform: ({ isHide }) => isHide ? 'translateX(-100%)' : 'translateX(0)',\r\n\t\ttransition: 'transform .2s ease',\r\n\t\t'&>*:not(:last-child)': {\r\n\t\t\tmarginBottom: 10\r\n\t\t},\r\n\t\t[`@media ${device.tabletS}`]: {\r\n\t\t\tposition: 'static',\r\n\t\t\tflex: '0 1 320px'\r\n\t\t},\r\n\t\t[`@media ${device.laptopL}`]: {\r\n\t\t\tposition: 'static',\r\n\t\t\tflex: '0 1 400px'\r\n\t\t},\r\n\t},\r\n\tbutton: {\r\n\t\tposition: 'fixed',\r\n\t\tbackgroundColor: theme.colors.buttonToDialogs,\r\n\t\tpadding: 5,\r\n\t\tborderRadius: '50%',\r\n\t\tzIndex: theme.zIndex.buttonToDialogs,\r\n\t}\r\n}), { name: 'Dialogs' })\r\n\r\nexport default useStyles","import { Field, Form, Formik } from \"formik\"\r\nimport { useTheme } from \"react-jss\"\r\nimport withField from \"../../../hoc/withField\"\r\nimport { notNull } from \"../../../utilits/validators/validators\"\r\nimport { TextareaWithSendButton } from \"../../common/form/Textarea/TextareaWithSendButton\"\r\n\r\nconst TextareaField = withField(TextareaWithSendButton)\r\n\r\nconst AddMessageForm = (props) => {\r\n\tconst theme = useTheme()\r\n\tconst onSubmit = (values, { setSubmitting, resetForm }) => {\r\n\t\tprops.sendMessage(values.message)\r\n\t\tsetSubmitting(false)\r\n\t\tresetForm()\r\n\t}\r\n\r\n\treturn <Formik\r\n\t\tinitialValues={{ message: '' }}\r\n\t\tonSubmit={onSubmit}\r\n\t>\r\n\t\t{({\r\n\t\t\tdirty,\r\n\t\t\thandleSubmit,\r\n\t\t\tisValid,\r\n\t\t\tisSubmitting\r\n\t\t}) => {\r\n\t\t\tconst handlerKeyPress = e => {\r\n\t\t\t\tif (e.charCode === 13 && !e.shiftKey) {\r\n\t\t\t\t\te.preventDefault()\r\n\t\t\t\t\thandleSubmit()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn (\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<Field\r\n\t\t\t\t\t\tcomponent={TextareaField}\r\n\t\t\t\t\t\tname='message'\r\n\t\t\t\t\t\tplaceholder='Enter Your message'\r\n\t\t\t\t\t\tonKeyPress={handlerKeyPress}\r\n\t\t\t\t\t\tvalidate={notNull}\r\n\t\t\t\t\t\tdisabled={!isValid || isSubmitting || !dirty}\r\n\t\t\t\t\t\tstyle={{ backgroundColor: theme.colors.backgroundContainer }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t)\r\n\t\t}}\r\n\t</Formik>\r\n}\r\n\r\nexport default AddMessageForm","import { createUseStyles } from 'react-jss'\r\n\r\nconst useStyles = createUseStyles(theme => ({\r\n\tmessage: {\r\n\t\twidth: 'max-content',\r\n\t\tpadding: '6px 18px',\r\n\t\tbackgroundColor: theme.colors.backgroundContainer,\r\n\t\tborderRadius: theme.sizes.borderRadius,\r\n\t}\r\n}))\r\n\r\nexport default useStyles","import useStyles from './Message.styled';\r\n\r\nconst Message = ({ text }) => {\r\n\tconst classes = useStyles()\r\n\treturn (\r\n\t\t<div className={classes.message}>{text}</div>\r\n\t)\r\n}\r\nexport default Message;","import { createUseStyles } from 'react-jss'\r\nimport { device } from '../../../styles/device'\r\nimport { CustomTheme } from '../../../styles/themes'\r\nimport { StyleProps } from './Chat'\r\n\r\ntype RuleNames = 'chat' | 'chatWrapper' | 'messagesBlock' | 'magicBox'\r\nconst useStyles = createUseStyles<RuleNames, StyleProps, CustomTheme>(theme => ({\r\n\tchat: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexFlow: 'column',\r\n\t\tflex: '1 1 100%',\r\n\t\trowGap: 15,\r\n\t\tjustifyContent: 'flex-end',\r\n\t\toverflow: 'hidden',\r\n\t\t[`@media ${device.tabletS}`]: {\r\n\t\t\tflex: '1 1 auto'\r\n\t\t}\r\n\t},\r\n\tchatWrapper: {\r\n\t\tdisplay: 'flex',\r\n\t\tposition: 'relative',\r\n\t\toverflow: 'hidden',\r\n\t},\r\n\tmessagesBlock: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: '100%',\r\n\t\tflexFlow: 'column-reverse nowrap',\r\n\t\toverflowY: 'auto',\r\n\t\toverflowX: 'hidden',\r\n\t\t'&>*:not(:first-child)': {\r\n\t\t\tmarginBottom: 10\r\n\t\t},\r\n\t\t'&::-webkit-scrollbar': {\r\n\t\t\twidth: 5,\r\n\t\t\tbackgroundColor: theme.colors.scrollbarBackground,\r\n\t\t\tborderRadius: '5px',\r\n\t\t},\r\n\t\t'&::-webkit-scrollbar-thumb': {\r\n\t\t\tbackgroundColor: theme.colors.scrollbar,\r\n\t\t\tborderRadius: '5px'\r\n\t\t},\r\n\t\t'&::-webkit-scrollbar-track': {\r\n\t\t\tborderRadius: '5px'\r\n\t\t}\r\n\t},\r\n\tmagicBox: ({ scrollBarIsShow }) => ({\r\n\t\tdisplay: 'block',\r\n\t\tposition: 'absolute',\r\n\t\theight: '100%',\r\n\t\twidth: 5,\r\n\t\ttop: 0,\r\n\t\tright: 0,\r\n\t\topacity: scrollBarIsShow ? 0 : 1,\r\n\t\tbackgroundColor: theme.colors.background,\r\n\t\ttransition: 'opacity .1s'\r\n\t})\r\n}), { name: 'Chat' })\r\n\r\nexport default useStyles","import { useEffect, useRef, useState } from \"react\"\r\nimport { scrollTo } from \"../../../utilits/functions\"\r\nimport AddMessageForm from \"../AddMessageForm/AddMessageForm\"\r\nimport Message from \"./Message/Message\"\r\nimport useStyles from './Chat.styled'\r\nimport { MsgDataType } from \"../../../types/types\"\r\n\r\ntype Props = {\r\n\tmessages: Array<MsgDataType>\r\n\tsendMessage: (message: string) => void\r\n}\r\nexport type StyleProps = { scrollBarIsShow: boolean }\r\nconst Chat: React.FC<Props> = (props) => {\r\n\tconst { messages, sendMessage } = props\r\n\tconst [scrollBarIsShow, setScrollBarIsShow] = useState(false)\r\n\tconst messagesEndRef = useRef<HTMLDivElement>(null)\r\n\tconst classes = useStyles({ scrollBarIsShow })\r\n\tlet msgList = messages.map(m => <Message text={m.text} key={m.id} />).reverse()\r\n\r\n\tuseEffect(() => {\r\n\t\tconst isScroll = messagesEndRef.current?.parentElement?.scrollTop! > -200\r\n\t\tif (isScroll) scrollTo(messagesEndRef, 'end')\r\n\t}, [messages]);\r\n\r\n\tfunction showScroll() {\r\n\t\tsetScrollBarIsShow(true)\r\n\t}\r\n\r\n\tfunction hideScroll() {\r\n\t\tsetScrollBarIsShow(false)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.chat}>\r\n\t\t\t<div\r\n\t\t\t\tclassName={classes.chatWrapper}\r\n\t\t\t\tonTouchMove={showScroll}\r\n\t\t\t\tonTouchEnd={hideScroll}\r\n\t\t\t\tonMouseEnter={showScroll}\r\n\t\t\t\tonMouseLeave={hideScroll}\r\n\t\t\t>\r\n\t\t\t\t<span className={classes.magicBox} />\r\n\t\t\t\t<div className={classes.messagesBlock}>\r\n\t\t\t\t\t<div ref={messagesEndRef} />\r\n\t\t\t\t\t{msgList}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<AddMessageForm sendMessage={sendMessage} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Chat","import DialogItem from './DialogItem/DialogItem'\r\nimport useStyles from './Dialogs.styled'\r\nimport { ErrorBoundary } from '../common/ErrorBoundary'\r\nimport Chat from './Chat/Chat'\r\nimport { useState } from 'react'\r\nimport { ButtonIcon } from '../common/form/Buttons/Buttons'\r\nimport useMedia from '../../hooks/useMedia'\r\nimport { device } from '../../styles/device'\r\nimport { DialogsProps } from './DialogsContainer'\r\n\r\nexport type StyleProps = { isHide: boolean }\r\n\r\nconst Dialogs: React.FC<DialogsProps> = (props) => {\r\n\tconst { dialogs, messages, sendMessage } = props\r\n\tconst [isHide, setIsHide] = useState(false)\r\n\tconst classes = useStyles({ isHide })\r\n\tconst isMobile = useMedia([device.tabletS], [false], true)\r\n\r\n\tconst dialogList = dialogs.map(d => {\r\n\t\treturn (\r\n\t\t\t<DialogItem\r\n\t\t\t\tkey={d.id}\r\n\t\t\t\tid={d.id}\r\n\t\t\t\tname={`${d.firstName} ${d.lastName}`}\r\n\t\t\t\tavatar={d.avatar}\r\n\t\t\t\tonClick={() => isMobile && setIsHide(true)}\r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<ErrorBoundary>\r\n\t\t\t<div className={classes.container}>\r\n\t\t\t\t{isMobile && <ButtonIcon className={classes.button} onClick={() => setIsHide(false)} icon='message' />}\r\n\t\t\t\t<div className={classes.dialogs}>\r\n\t\t\t\t\t{dialogList}\r\n\t\t\t\t</div>\r\n\t\t\t\t<Chat messages={messages} sendMessage={sendMessage} />\r\n\t\t\t</div>\r\n\t\t</ErrorBoundary>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;","import { AppState } from \"./redux-store\"\r\n\r\nexport const selectDialogs = (state: AppState) => state.dialogs.dialogsData\r\nexport const selectMessages = (state: AppState) => state.dialogs.msgData","import Dialogs from './Dialogs'\r\nimport { sendMessage } from '../../redux/dialogs-reducer'\r\nimport { connect } from 'react-redux'\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\nimport { selectDialogs, selectMessages } from '../../redux/dialogs-selectors'\r\nimport { AppState } from '../../redux/redux-store'\r\nimport { DialogsData, MsgDataType } from '../../types/types'\r\n\r\ntype StateProps = {\r\n\tdialogs: Array<DialogsData>\r\n\tmessages: Array<MsgDataType>\r\n}\r\ntype DispatchProps = {\r\n\tsendMessage: (message: string) => void\r\n}\r\nexport type DialogsProps = StateProps & DispatchProps\r\n\r\nlet mapStateToProps = (state: AppState): StateProps => ({\r\n\tdialogs: selectDialogs(state),\r\n\tmessages: selectMessages(state)\r\n})\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, { sendMessage }),\r\n\twithAuthRedirect\r\n)(Dialogs)"],"names":["createUseStyles","container","display","alignItems","columnGap","width","height","objectFit","borderRadius","props","id","avatar","name","onClick","classes","useStyles","className","src","alt","to","theme","position","sizes","headerHeight","padding","dialogs","inset","backgroundColor","colors","background","zIndex","transform","isHide","transition","marginBottom","device","flex","button","buttonToDialogs","TextareaField","withField","TextareaWithSendButton","useTheme","initialValues","message","onSubmit","values","setSubmitting","resetForm","sendMessage","dirty","handleSubmit","isValid","isSubmitting","component","placeholder","onKeyPress","e","charCode","shiftKey","preventDefault","validate","notNull","disabled","style","backgroundContainer","text","chat","flexFlow","rowGap","justifyContent","overflow","chatWrapper","messagesBlock","overflowY","overflowX","scrollbarBackground","scrollbar","magicBox","top","right","opacity","scrollBarIsShow","messages","useState","setScrollBarIsShow","messagesEndRef","useRef","msgList","map","m","reverse","showScroll","hideScroll","useEffect","current","parentElement","scrollTop","scrollTo","onTouchMove","onTouchEnd","onMouseEnter","onMouseLeave","ref","setIsHide","isMobile","useMedia","dialogList","d","firstName","lastName","ErrorBoundary","icon","selectDialogs","state","dialogsData","selectMessages","msgData","compose","connect","withAuthRedirect","Dialogs"],"sourceRoot":""}